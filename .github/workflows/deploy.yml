name: CI/CD Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - closed

jobs:
  deploy:
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.title, 'backend')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Deploy API via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e  # Stop execution on any error

            echo "🔄 Navigating to project directory..."
            cd /root/TravelPartner

            echo "📦 Fetching latest changes..."
            git fetch --prune
            git reset --hard origin/main
            git pull origin main

            echo "🔄 Navigating to backend directory..."
            cd backend

            echo "🛑 Stopping and removing existing PostgreSQL container..."
            if docker ps -q --filter "name=postgres_db"; then
              docker stop postgres_db
              docker rm postgres_db
            else
              echo "✅ No running Postgres container found."
            fi

            echo "🗑️ Removing old PostgreSQL volume (if exists)..."
            if docker volume ls | grep -q "backend_postgres_data"; then
              docker volume rm backend_postgres_data
            else
              echo "✅ No PostgreSQL volume found."
            fi

            echo "🛠️ Rebuilding and restarting services..."
            docker compose down
            docker compose build --force-rm --no-cache --compress
            docker compose up -d --remove-orphans

            echo "🚀 Deployment successful!"
